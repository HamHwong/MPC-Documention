import{_ as x,h as a,B as o,o as h,c as y,x as n,D as i,z as g,N as s}from"./chunks/framework.6acf563d.js";const u={setup(){const e=a(!1),l=a("/static/demo.pdf");function d(){e.value=!1}function t(){e.value=!0}return{modalVisibility:e,handleClose:d,handleShow:t,url:l}}},N=JSON.parse('{"title":"Modal","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Components/Modal.md"}'),_=s('<h1 id="modal" tabindex="-1">Modal <a class="header-anchor" href="#modal" aria-label="Permalink to &quot;Modal&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>支持伸缩、移动的窗口</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2>',4),b=s('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Props Name</th><th style="text-align:left;">Explanation</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th></tr></thead><tbody><tr><td style="text-align:left;">draggable</td><td style="text-align:left;">是否可移动</td><td style="text-align:left;"><code>Boolean</code></td><td style="text-align:left;"><code>false</code></td></tr><tr><td style="text-align:left;">resizeable</td><td style="text-align:left;">是否可伸缩</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;"><code>0</code></td></tr><tr><td style="text-align:left;">width</td><td style="text-align:left;">初始宽度,若未设置,则默认为内容宽度,最小宽度为200px</td><td style="text-align:left;"><code>Number</code>,<code>Null</code></td><td style="text-align:left;"><code>null</code></td></tr><tr><td style="text-align:left;">height</td><td style="text-align:left;">初始高度,若未设置,则默认为内容高度,最小高度为200px</td><td style="text-align:left;"><code>Number</code>,<code>Null</code></td><td style="text-align:left;"><code>null</code></td></tr><tr><td style="text-align:left;">maxHeight</td><td style="text-align:left;">最大高度</td><td style="text-align:left;"><code>Number</code>,<code>Null</code></td><td style="text-align:left;"><code>null</code></td></tr><tr><td style="text-align:left;">maxWidth</td><td style="text-align:left;">最大宽度</td><td style="text-align:left;"><code>Number</code>,<code>Null</code></td><td style="text-align:left;"><code>null</code></td></tr><tr><td style="text-align:left;">position</td><td style="text-align:left;">初始位置</td><td style="text-align:left;"><code>Object</code>:{x:<code>Number</code>,y:<code>Number</code>}</td><td style="text-align:left;"><code>{x:0,y:0}</code></td></tr><tr><td style="text-align:left;">visible</td><td style="text-align:left;">窗口是否可见</td><td style="text-align:left;"><code>Boolean</code></td><td style="text-align:left;"><code>false</code></td></tr><tr><td style="text-align:left;">center</td><td style="text-align:left;">窗口是否居中显示, 若为<code>true</code>时<code>draggable</code>,<code>resizeable</code>失效</td><td style="text-align:left;"><code>Boolean</code></td><td style="text-align:left;"><code>false</code></td></tr><tr><td style="text-align:left;">tapShadowToClose</td><td style="text-align:left;">点击阴影是否关闭窗口</td><td style="text-align:left;"><code>Boolean</code></td><td style="text-align:left;"><code>false</code></td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Event Name</th><th style="text-align:left;">Explanation</th></tr></thead><tbody><tr><td style="text-align:left;">close</td><td style="text-align:left;">窗口关闭时触发</td></tr><tr><td style="text-align:left;">display</td><td style="text-align:left;">窗口显示时触发</td></tr></tbody></table>',5);function p(e,l,d,t,m,v){const r=o("MPPdfReader"),c=o("MPModal");return h(),y("div",null,[_,n("div",null,[n("button",{onClick:l[0]||(l[0]=(...f)=>t.handleShow&&t.handleShow(...f))},"点击开窗"),i(c,{visible:t.modalVisibility,onClose:t.handleClose,position:{x:50,y:100},draggable:"",resizeable:""},{default:g(()=>[i(r,{pdfurl:t.url},null,8,["pdfurl"])]),_:1},8,["visible","onClose"])]),b])}const T=x(u,[["render",p]]);export{N as __pageData,T as default};
