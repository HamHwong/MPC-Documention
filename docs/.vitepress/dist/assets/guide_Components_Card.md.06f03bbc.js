import{e as t,o as a,c as s,b as n,f as e,w as p,g as l,a as o,d as c}from"./app.0712c9f5.js";const i='{"title":"Card 卡片","description":"","frontmatter":{},"headers":[{"level":2,"title":"Overview","slug":"overview"},{"level":2,"title":"Example","slug":"example"},{"level":3,"title":"Basic","slug":"basic"},{"level":3,"title":"Templates","slug":"templates"},{"level":2,"title":"API","slug":"api"},{"level":3,"title":"Props","slug":"props"},{"level":3,"title":"Data Props","slug":"data-props"},{"level":3,"title":"Events","slug":"events"}],"relativePath":"guide/Components/Card.md","lastUpdated":1629275620066}',d={},u=o('<h1 id="card-卡片"><a class="header-anchor" href="#card-卡片" aria-hidden="true">#</a> Card 卡片</h1><h2 id="overview"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h2><p>基础卡片组件,</p><p>附带多个卡片模版,</p><p>也可自定义使用</p><h2 id="example"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><h3 id="basic"><a class="header-anchor" href="#basic" aria-hidden="true">#</a> Basic</h3>',7),r={style:{width:"100%","background-color":"#fff","box-sizing":"content-box"}},g=c(" This is Basic Card "),k=n("div",{style:{"font-weight":"bold","font-size":"30px","text-align":"center"}},"You can custom your own card.",-1),h=c(" This is Basic Card "),f=o('<div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span>\n            <span class="token property">background-color</span><span class="token punctuation">:</span>#fff<span class="token punctuation">;</span>\n            <span class="token property">box-sizing</span><span class="token punctuation">:</span>content-box<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MPCard</span><span class="token punctuation">&gt;</span></span> This is Basic Card <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MPCard</span><span class="token punctuation">&gt;</span></span>  \n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MPCard</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span>#fff<span class="token punctuation">;</span>\n                <span class="token property">margin-top</span><span class="token punctuation">:</span>15px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">font-weight</span><span class="token punctuation">:</span>bold<span class="token punctuation">;</span>\n                <span class="token property">font-size</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span>\n                <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>\n                  You can custom your own card.\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MPCard</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>60%<span class="token punctuation">;</span>\n                <span class="token property">margin</span><span class="token punctuation">:</span>0 auto<span class="token punctuation">;</span>\n                <span class="token property">padding</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> \n      This is Basic Card \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MPCard</span><span class="token punctuation">&gt;</span></span> \n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MPCard</span><span class="token punctuation">&gt;</span></span> \n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h3 id="templates"><a class="header-anchor" href="#templates" aria-hidden="true">#</a> Templates</h3><h4 id="_1-user-info-card"><a class="header-anchor" href="#_1-user-info-card" aria-hidden="true">#</a> 1. User Info Card</h4>',3),y={style:{display:"flex","flex-wrap":"wrap",width:"50%","margin-top":"20px"}},x=c("title"),m=c("content"),v=c("others"),_=o('<div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span>\n        <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>\n        <span class="token property">width</span> <span class="token punctuation">:</span>50%<span class="token punctuation">;</span>\n        <span class="token property">margin-top</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MPCard</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userInfo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#title</span><span class="token punctuation">&gt;</span></span>title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#content</span><span class="token punctuation">&gt;</span></span>content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#others</span><span class="token punctuation">&gt;</span></span>others<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MPCard</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="api"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><h3 id="props"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h3><table><thead><tr><th style="text-align:left;">Props Name</th><th style="text-align:left;">Explanation</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th></tr></thead><tbody><tr><td style="text-align:left;">value</td><td style="text-align:left;">The source data of carousel</td><td style="text-align:left;"><code>Array</code></td><td style="text-align:left;"><code>[]</code></td></tr><tr><td style="text-align:left;">height</td><td style="text-align:left;">The height of carousel</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;"><code>300px</code></td></tr><tr><td style="text-align:left;">indicators</td><td style="text-align:left;">If show the indicators at the bottom of slides</td><td style="text-align:left;"><code>Boolean</code></td><td style="text-align:left;"><code>false</code></td></tr></tbody></table><h3 id="data-props"><a class="header-anchor" href="#data-props" aria-hidden="true">#</a> Data Props</h3><table><thead><tr><th style="text-align:left;">Data Props Name</th><th style="text-align:left;">Explanation</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th><th style="text-align:left;">Required</th></tr></thead><tbody><tr><td style="text-align:left;">pic</td><td style="text-align:left;">The <code>URL</code> of image</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;"><code>&#39;&#39;</code></td><td style="text-align:left;"><code>Required</code></td></tr><tr><td style="text-align:left;">width</td><td style="text-align:left;">Display width of image, if left it unset, the pic will show as original size. if set only width without height, the height will automatically fit the scale</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;"></td><td style="text-align:left;"><code>Optional</code></td></tr><tr><td style="text-align:left;">height</td><td style="text-align:left;">Display height of image, if set width and left height unset, the pic will show as original size.</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;"></td><td style="text-align:left;"><code>Optional</code></td></tr><tr><td style="text-align:left;">order</td><td style="text-align:left;">The slides will shows in ascending order</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;"></td><td style="text-align:left;"><code>Optional</code></td></tr></tbody></table><h3 id="events"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h3>',7),w=o('<table><thead><tr><th style="text-align:left;">Event Name</th><th style="text-align:left;">Explanation</th><th style="text-align:left;">Return Value</th></tr></thead><tbody><tr><td style="text-align:left;">click</td><td style="text-align:left;">Click event, triggered when you click the actived slice.</td><td style="text-align:left;"><code>$event</code> ,<code>item</code>,<code>index</code>, for <code>Click Event</code>,<code>Clicked Object</code>,<code>Index of the Clicked Object</code></td></tr><tr><td style="text-align:left;">pause</td><td style="text-align:left;">Emit while carousel paused, specific means when mouse over the slide</td><td style="text-align:left;"><code>index</code>, current index of the paused slide</td></tr><tr><td style="text-align:left;">continue</td><td style="text-align:left;">Emit when carousel resume, specific means when mouse out of the slide</td><td style="text-align:left;"><code>index</code>, current index of the resuming slide</td></tr><tr><td style="text-align:left;">next</td><td style="text-align:left;">Emit when carousel turn to next page</td><td style="text-align:left;"><code>index</code>, the index of the turning slide</td></tr><tr><td style="text-align:left;">previous</td><td style="text-align:left;">Emit when carousel turn to previous page</td><td style="text-align:left;"><code>index</code>, the index of the turning slide</td></tr></tbody></table>',1);d.render=function(o,c,i,d,T,b){const C=t("MPCard");return a(),s("div",null,[u,n("div",r,[e(C,null,{default:p((()=>[g])),_:1}),e(C,{style:{"background-color":"#fff","margin-top":"15px"}},{default:p((()=>[k,e(C,{style:{width:"60%",margin:"0 auto",padding:"10px"}},{default:p((()=>[h])),_:1})])),_:1})]),f,n("div",y,[e(C,{type:"userInfo"},{title:p((()=>[x])),content:p((()=>[m])),others:p((()=>[v])),_:1})]),_,l(" |Event Name|Explanation|Type|Default| "),w])};export{i as __pageData,d as default};
